version: '2'

services:
  eureka-server:
    build: eureka-server/
    restart: always
    network_mode: "host"
    hostname: localhost
    image: eureka-server
    ports:
      - 8761:8761

  config-service:
    build: config-server/
    restart: always
    network_mode: "host"
    image: config-service
    hostname: localhost
    ports:
      - 8888:8888

  zuul-api:
    build: zuul-api/
    depends_on:
      - config-service
      - eureka-server
    restart: always
    network_mode: "host"
    image: zuul-api
    hostname: localhost
    ports:
      - 8083:8083

  userloginservice:
    build: user-authentication-service
    restart: always
    network_mode: "host"
    depends_on:
      - mysqldb
      - eureka-server
      - zuul-api
      - rabbitmq
    ports:
      - 8088:8088

  reviewservice:
    build: review-service
    restart: always
    network_mode: "host"
    depends_on:
      - mongodb
      - eureka-server
      - zuul-api
      - rabbitmq
      - config-service
    ports:
      - 8089:8089

  searchservice:
    build: search-service
    restart: always
    network_mode: "host"
    depends_on:
      - mongodb
      - eureka-server
      - zuul-api
      - rabbitmq
      - config-service
    ports:
      - 8090:8090

  mysqldb:
    image: mysql:5.7
    ports:
      - 3306:3306
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: logindb
      MYSQL_PASSWORD: root
      MYSQL_USER: root
    volumes:
      - $HOME/data/datasql:/var/lib/mysql
    network_mode: "host"
    hostname: localhost
    restart: always

  mongodb:
    image: mongo:3.4-xenial
    restart: always
    network_mode: "host"
    volumes:
      - $HOME/data:/data/db

  reviewerprofileservice:
    build: reviewer-profile-service
    restart: always
    network_mode: "host"
    depends_on:
      - mongodb
      - eureka-server
      - zuul-api
      - rabbitmq
      - config-service
    ports:
      - 8087:8087

  productownerprofileservice:
    build: product-owner-service
    restart: always
    network_mode: "host"
    depends_on:
      - mongodb
      - eureka-server
      - zuul-api
      - rabbitmq
      - config-service
    ports:
      - 8060:8060

  nlpservice:
    build: NLP-service
    restart: always
    network_mode: "host"
    depends_on:
      - mongodb
      - eureka-server
      - zuul-api
      - rabbitmq
      - config-service
    ports:
      - 8877:8877

  productsearchservice:
      build: product-search-service
      restart: always
      network_mode: "host"
      depends_on:
        - mongodb
        - eureka-server
        - zuul-api
        - rabbitmq
        - config-service
      ports:
        - 8081:8081

  rabbitmq:
    image: rabbitmq:3.7.5-management
    hostname: localhost
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - $HOME/data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    environment:
      RABBITMQ_ERLANG_COOKIE: 6085e2412b6fa88647466c6a81c0cea0
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST:



  recommendation:
    build: recommendation-service
    restart: always
    network_mode: "host"
    depends_on:
      - neo4j
      - eureka-server
      - zuul-api
      - rabbitmq
      - config-service
    ports:
      - 8085:8085
    expose:
      - 8085

  neo4j:
    image: neo4j:3.0
    restart: always
    hostname: localhost
    network_mode: "host"
    ports:
      - 7474:7474
      - 7687:7687
    expose:
      - 7474
    volumes:
      - ./neo4J/data:/data
      - ./neo4J/import:/import
    environment:
      - NEO4J_AUTH=neo4j/root123

  censeosphere:
    build:
     context: ./censeosphere
     args:
      NG_CLI_ANYALYTICS: ci
    network_mode: "host"
    hostname: localhost
    ports:
      - 8181:8181
    restart: always
    environment:
      NG_CLI_ANYALYTICS: ci

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    restart: always
    network_mode: host
    hostname: localhost
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml


  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
       - prometheus
    network_mode: "host"
    hostname: localhost